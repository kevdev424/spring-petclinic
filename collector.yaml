receivers:
  otlp:
    protocols:
      http:
      grpc:
  # The hostmetrics receiver is required to get correct infrastructure metrics in Datadog.
  hostmetrics:
    collection_interval: 10s
    scrapers:
      paging:
      cpu:
      disk:
      filesystem:
      load:
      memory:
      network:
      processes:
  # The prometheus receiver scrapes metrics needed for the OpenTelemetry Collector Dashboard.
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otelcol'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']

filelog:
  include:
    - ./logs/spring-petclinic.log
  start_at: end
  poll_interval: 500ms
  operators:
    - id: parse_log
      type: regex_parser
      regex: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+) (?P<logger>\S+) (?P<trace_id>[a-f\d]{32}) (?P<span_id>[a-f\d]{16}) - (?P<message>.*)$'
      timestamp:
        parse_from: timestamp
        layout: '%Y-%m-%d %H:%M:%S'
      severity:
        parse_from: level
      attributes:
        logger: logger
        message: message
    - id: add_trace_and_span_ids
      type: metadata
      attributes:
        dd.trace_id:
          parse_from: trace_id
        dd.span_id:
          parse_from: span_id
  attributes:
    ddtags: env:staging

processors:
  batch:
    send_batch_max_size: 100
    send_batch_size: 10
    timeout: 10s

exporters:
  datadog:
    api:
      site: <DD_SITE>
      key: ${env:DD_API_KEY}


service:
  pipelines:
    metrics:
      receivers: [hostmetrics, otlp]
      processors: [batch]
      exporters: [datadog]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [datadog]


